{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Conectar a Base de datos:\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 npm install express mysql2 (Ser\'eda maribd creo)
\f0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
const express = require('express');\
const mysql = require('mysql2');\
const app = express();\
const port = 5000;\
\
const db = mysql.createConnection(\{\
  host: 'localhost',\
  user: 'root',\
  password: 'password',\
  database: 'tennis_classes'\
\});\
\
app.use(express.json());\
\
app.get('/api/classes', (req, res) => \{\
  const today = new Date().toISOString().slice(0, 10); // Fecha en formato YYYY-MM-DD\
  db.query('SELECT * FROM classes WHERE date = ?', [today], (err, results) => \{\
    if (err) throw err;\
    res.json(results);\
  \});\
\});\
\
app.listen(port, () => \{\
  console.log(`Server running on http://localhost:$\{port\}`);\
\});\
\
Sacar los datos en react:\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 npm install axios -> Instalar arios\
\
import React, \{ useEffect, useState \} from 'react';\
import axios from 'axios';\
import \{ Container, Row, Col, Card, ListGroup, Button \} from 'react-bootstrap';\
\
function TennisClasses() \{\
  const [classes, setClasses] = useState([]);\
\
  useEffect(() => \{\
    axios.get('/api/classes')\
      .then(response => \{\
        setClasses(response.data);\
      \})\
      .catch(error => \{\
        console.error('There was an error fetching the classes!', error);\
      \});\
  \}, []);\
\
  return (\
    <Container fluid>\
      \{classes.length > 0 ? (\
        classes.map((cls, index) => (\
          <Row key=\{index\}>\
            <Col>\
              <Card className='custom-card'>\
                <Card.Body>\
                  <Card.Title>Hora \{cls.time\}</Card.Title>\
                  <Card.Subtitle className="mb-2 text-muted">Pista \{cls.court\}</Card.Subtitle>\
                  <ListGroup variant="flush">\
                    \{cls.participants.map((p, i) => (\
                      <ListGroup.Item key=\{i\}>\{p\}</ListGroup.Item>\
                    ))\}\
                  </ListGroup>\
                  <Button variant="primary">Ir a la clase</Button>\
                </Card.Body>\
              </Card>\
            </Col>\
          </Row>\
        ))\
      ) : (\
        <Row>\
          <Col>\
            <h1>No hay clases hoy</h1>\
          </Col>\
        </Row>\
      )\}\
    </Container>\
  );\
\}\
\
export default TennisClasses;\
}